<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
grav = .1;
hsp = 0;
vsp = 0;
jumpspeed = 7;
image_xscale *= 2;
image_yscale *= 2;
image_speed = 0;

if (global.artFlag != 0) {
    image_index = global.artFlag - 1;
}
else {
    instance_create(x, y, objPlayerBetter);
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;

if (y &gt; room_height + 36) scr_death();

leftLean = max(keyboard_check(vk_left), keyboard_check(ord('A')), 0);
rightLean = max(keyboard_check(vk_right), keyboard_check(ord('D')), 0);

jump = keyboard_check_pressed(vk_space);

if (vsp &lt;= 10) vsp += grav;

if (place_meeting(x,y+1,objWave)) {
    vsp = jump * -jumpspeed
}

if (leftLean) {
    image_angle += 3;
}
else if (rightLean) {
    image_angle -= 3;
}
else {
    image_angle += .5;
}

y += vsp;

/*
if (image_angle &gt;= 360) || (image_angle &lt;= -360) {
    image_angle = 0;
    global.sickFlips++;
}*/

if (image_angle &gt;= 260) {
    image_angle = -100;
    global.sickFlips += 400;
}
else if (image_angle &lt;= -260) {
    image_angle = 100;
    global.sickFlips += 400;
}
else if (((image_angle &gt; 70) | (image_angle &lt; -70)) &amp;&amp; ((place_meeting(x-5, y + 5, objWave)) | (place_meeting(x + 5, y + 5, objWave)))) {
    global.sickFlips += 2;
}

global.distance++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWind">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += 40;

with (other) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWave">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_angle &gt; 100)||(image_angle &lt; -100) {
    scr_death();
} 

y -= .5;
vsp = 0;

if (place_meeting(x+24, y-4, objWave)){
    image_angle += .1;
}
else if (place_meeting(x-24, y-4, objWave)){
    image_angle -= .1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
